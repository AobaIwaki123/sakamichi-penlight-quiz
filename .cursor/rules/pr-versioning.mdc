---
alwaysApply: true
description: "PRラベリングとセマンティックバージョニングポリシー"
---

# PR作成とバージョニングポリシー

## セマンティックバージョニングラベル

**重要**: PRを作成する際は、変更の影響度に応じて以下のラベルを**必ず**付与すること：

### `major` - 破壊的変更（Breaking Changes）
以下の変更を含むPRには`major`ラベルを付与：
- 既存APIの削除・変更
- データベーススキーマの破壊的変更
- 設定ファイル形式の変更
- 依存関係の大幅な更新（Node.js、React等のメジャーバージョンアップ）
- ユーザーに影響する重大な仕様変更

### `minor` - 新機能追加（後方互換性あり）
以下の変更を含むPRには`minor`ラベルを付与：
- 新機能・新API追加
- 新しいコンポーネントの追加
- BigQueryテーブル・カラムの追加
- パフォーマンス改善
- 新しい依存関係の追加

### `patch` - バグ修正・小規模改善（後方互換性あり）
以下の変更を含むPRには`patch`ラベルを付与：
- バグ修正
- タイポ修正
- ドキュメント更新
- コードリファクタリング（機能変更なし）
- デザイン調整・UI改善
- ログメッセージの改善

## PR作成テンプレート

PR作成時は以下のテンプレートを使用すること：

```markdown
## 変更内容
[変更内容の簡潔な説明]

## 影響範囲
- [変更が既存機能に与える影響を記載]
- [新機能の場合は影響なしを明記]
- [関連コンポーネント・ストアの変更点を記載]

## テスト
- [ ] ユニットテスト追加済み
- [ ] 手動テスト完了
- [ ] 回帰テスト確認済み

ラベル: `[major|minor|patch]`
```

## ラベル判断基準

迷った場合は以下の基準で判断：

- **API変更**: 既存の呼び出し方法が変わる場合は`major`
- **新規追加**: 既存機能に影響しない場合は`minor`
- **内部変更**: 外部から見える動作に変更がない場合は`patch`
- **設定変更**: 環境変数・設定ファイルの変更は`major`または`minor`

## 実装時の注意事項

1. **PR作成前**: 必ず変更内容を確認し、適切なラベルを決定する
2. **コードレビュー時**: ラベルが適切か確認する
3. **マージ時**: ラベルに基づいたバージョンタグを付与する
4. **リリース時**: セマンティックバージョニングに従ってバージョンを更新する

## 例外ケース

以下の場合はラベル付与を省略可能：
- ドラフトPR（WIPラベル付き）
- 緊急度の高いホットフィックス（後からラベル追加）
- 内部実験用ブランチ（feature/experimental-*）

ただし、メインブランチにマージする前には必ずラベルを付与すること。