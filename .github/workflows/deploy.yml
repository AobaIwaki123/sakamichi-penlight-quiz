name: Deploy Sakamichi Penlight Quiz
run-name: Deploy Sakamichi Penlight Quiz

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker image tag (e.g. tmp-1)"
        required: true
        default: tmp
  push:
    tags:
      - '*'  # 任意のタグ push に反応

env:
  HARBOR_REGISTRY: harbor.aooba.net
  IMAGE_NAME: penlight/prod-view-penlight
  DEPLOYMENT_FILE_PATH: k8s/manifests/deployment.yml

jobs:
  docker-build-and-push-to-harbor:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Docker image tag
        id: set-tag
        env:
          EVENT_NAME: ${{ github.event_name }}
          IMAGE_TAG: ${{ github.event.inputs.image_tag }}
        run: |
          if [[ "${EVENT_NAME}" == "workflow_dispatch" ]]; then
            echo "image_tag=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
          else
            echo "image_tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor registry
        uses: docker/login-action@v3
        env:
          HARBOR_REGISTRY: ${{ env.HARBOR_REGISTRY }}
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: robot$github-action-penlight
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: Build and Push Docker image to Harbor
        uses: docker/build-push-action@v6
        env:
          HARBOR_REGISTRY: ${{ env.HARBOR_REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ steps.set-tag.outputs.image_tag }}
        with:
          context: ./view
          file: ./view/Dockerfile
          target: prod
          push: true
          tags: ${{ env.HARBOR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  update-deployment-manifest:
    runs-on: ubuntu-latest
    needs: docker-build-and-push-to-harbor
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up yq (YAML processor)
        uses: mikefarah/yq@v4

      - name: Update deployment YAML with new image tag
        env:
          DEPLOYMENT_FILE_PATH: ${{ env.DEPLOYMENT_FILE_PATH }}
          HARBOR_REGISTRY: ${{ env.HARBOR_REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ needs.docker-build-and-push-to-harbor.outputs.image_tag }}
        run: |
          yq -i '.spec.template.spec.containers[0].image = "${HARBOR_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"' "${DEPLOYMENT_FILE_PATH}"
          echo "Updated image in ${DEPLOYMENT_FILE_PATH}"

      - name: Commit and push deployment update
        env:
          DEPLOYMENT_FILE_PATH: ${{ env.DEPLOYMENT_FILE_PATH }}
          IMAGE_TAG: ${{ needs.docker-build-and-push-to-harbor.outputs.image_tag }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add "${DEPLOYMENT_FILE_PATH}"
          git commit -m "Update image tag to ${IMAGE_TAG}"
          git push

  sync:
    runs-on: ubuntu-latest
    needs: update-deployment-manifest
    steps:
      - name: Trigger ArgoCD sync via API
        env:
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          curl -X POST https://argocd.aooba.net/api/v1/applications/penlight/sync \
            -H "Authorization: Bearer $ARGOCD_TOKEN" \
            -H "Content-Type: application/json"
