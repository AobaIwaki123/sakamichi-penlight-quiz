name: Deploy Sakamichi Penlight Quiz
run-name: Deploy Sakamichi Penlight Quiz

on:
  workflow_dispatch:

env:
  HARBOR_REGISTRY: harbor.aooba.net
  IMAGE_NAME: penlight/prod-view-penlight
  IMAGE_TAG: local-tmp-7
  DEPLOYMENT_FILE_PATH: k8s/manifests/deployment.yml  # 適宜修正

jobs:
  docker-build-and-push-to-harbor:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: robot$github-action-penlight
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./view
          file: ./view/Dockerfile
          target: prod
          push: true
          tags: ${{ env.HARBOR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  update-deployment-manifest:
    runs-on: ubuntu-latest
    needs: docker-build-and-push-to-harbor
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up yq
        uses: mikefarah/yq@v4

      - name: Update Deployment image tag
        run: |
          yq -i '.spec.template.spec.containers[0].image = "${{ env.HARBOR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"' ${{ env.DEPLOYMENT_FILE_PATH }}
          echo "Updated deployment image to: ${{ env.HARBOR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${{ env.DEPLOYMENT_FILE_PATH }}
          git commit -m "Update image tag to ${{ env.IMAGE_TAG }}"
          git push

  sync:
    runs-on: ubuntu-latest
    needs: update-deployment-manifest
    steps:
      - name: Curl ArgoCD Sync
        env:
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          curl -X POST https://argocd.aooba.net/api/v1/applications/penlight/sync \
            -H "Authorization: Bearer $ARGOCD_TOKEN" \
            -H "Content-Type: application/json"
